public final class io/sentry/opentelemetry/OtelContextScopeStorage : io/sentry/ScopeStorage {
	public fun <init> ()V
	public fun close ()V
	public fun get ()Lio/sentry/IHub;
	public fun set (Lio/sentry/IHub;)Lio/sentry/SentryStorageToken;
}

public final class io/sentry/opentelemetry/SentryContextStorage : io/opentelemetry/context/ContextStorage {
	public static final field HUB_KEY Lio/opentelemetry/context/ContextKey;
	public fun <init> (Lio/opentelemetry/context/ContextStorage;)V
	public fun attach (Lio/opentelemetry/context/Context;)Lio/opentelemetry/context/Scope;
	public fun current ()Lio/opentelemetry/context/Context;
}

public final class io/sentry/opentelemetry/SentryContextWrapper : io/opentelemetry/context/Context {
	public fun get (Lio/opentelemetry/context/ContextKey;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun with (Lio/opentelemetry/context/ContextKey;Ljava/lang/Object;)Lio/opentelemetry/context/Context;
	public static fun wrap (Lio/opentelemetry/context/Context;)Lio/sentry/opentelemetry/SentryContextWrapper;
}

public final class io/sentry/opentelemetry/SentryOtelKeys {
	public static final field SENTRY_BAGGAGE_KEY Lio/opentelemetry/context/ContextKey;
	public static final field SENTRY_HUB_KEY Lio/opentelemetry/context/ContextKey;
	public static final field SENTRY_SCOPES_KEY Lio/opentelemetry/context/ContextKey;
	public static final field SENTRY_TRACE_KEY Lio/opentelemetry/context/ContextKey;
	public fun <init> ()V
}

public final class io/sentry/opentelemetry/SentryWeakSpanStorage {
	public fun getHub (Lio/opentelemetry/api/trace/SpanContext;)Lio/sentry/IHub;
	public static fun getInstance ()Lio/sentry/opentelemetry/SentryWeakSpanStorage;
	public fun getScopes (Lio/opentelemetry/api/trace/SpanContext;)Lio/sentry/Scopes;
	public fun storeHub (Lio/opentelemetry/api/trace/SpanContext;Lio/sentry/IHub;)V
	public fun storeScopes (Lio/opentelemetry/api/trace/SpanContext;Lio/sentry/Scopes;)V
}

